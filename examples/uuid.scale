import std.math

struct UUID
    decl bytes: [uint8]

    function init(bytes: [uint8]): none
        [(new<uint8>[16] => bytes[i])] => self.bytes
    end

    function init(): none
        [(new<uint8>[16] => random)] => self.bytes
    end

    function toString(): str
        "" => decl result: str
        for i in 0 to 16 do
            if i 4 == i 6 == || i 8 == i 10 == || || then
                result "-" + => result
            fi
            self.bytes[i] => decl value
            if value 16 < then
                result "0" + => result
            fi
            result value:toHexString + => result
        done
        result return
    end
end

function main(): none
    [(new<uint8>[16] => 0)] UUID::new puts
    [(new<uint8>[16] => i)] UUID::new puts
    [(new<uint8>[16] => i 3 << i 3 * 2 / +)] UUID::new puts
end
