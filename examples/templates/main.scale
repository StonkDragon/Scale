# Templates
# --------------------------
# This example demonstrates the use of templates.
# Templates are a way to define a generic type
# that can be specialized to a specific type
# at compile time. This is useful for creating
# generic data structures that can be used with
# any type.

# Both T and U can be any valid token in Scale
template<T, U>
struct Foo
    decl x: T
    decl y: U

    function setX(val: T): none
        val => x
        val puts
    end

    function setY(val: U): none
        val => y
        val puts
    end
end

function main(): none
    Foo<Box<int>, str>::new => decl f: Foo<Box<int>, str>

    # reference here because value types result in
    # undefined behavior
    "hello" f:setY
    42:asReference f:setX
end
