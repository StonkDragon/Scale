import std.math

struct UUID
    decl bytes: [uint8]

    init(bytes: [uint8])
        [new<uint8>[16] do bytes[i]] => self.bytes
    end

    init()
        [new<uint8>[16] do random] => self.bytes
    end

    function toHexString(x: uint8): str
        new<int8>[3] => decl c: [int8]
        unsafe
            c!
                sprintf(*c, "%02x", *x);
            end
        end
        c str::new return
    end

    function toString(): str
        "" => decl result: str
        for i in 0 to 16 do
            if i 4 == i 6 == || i 8 == i 10 == || || then
                result "-" + => result
            fi
            self.bytes[i] => decl value
            result value toHexString + => result
        done
        result return
    end
end

function main(): none
    [new<uint8>[16] do 0] UUID::new puts
    [new<uint8>[16] do i] UUID::new puts
    [new<uint8>[16] do i 3 << i 3 * 2 / +] UUID::new puts
end
