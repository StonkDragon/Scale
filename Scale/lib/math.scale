// math.scale
#ifndef _MATH_SCALE_
#define _MATH_SCALE_
#include "core.scale"

#define CONST_E         2.71828182845904523536028747135266250
#define CONST_PI        3.14159265358979323846264338327950288

extern sqrt
extern sin
extern cos
extern tan
extern asin
extern acos
extern atan
extern atan2
extern sinh
extern cosh
extern tanh
extern asinh
extern acosh
extern atanh
extern exp
extern log
extern log10

// Stack: [] -> [random]
// Pushes a random number to the stack.
extern random

// Stack: [a] -> [a%2==0]
// Test if an integer is even.
function iseven(i)      i 2 % 0 equal return end

// Stack: [a] -> [a++]
// Increment an integer.
@nps @nowarn function inc(i)         i 1 + end

// Stack: [a] -> [a--]
// Decrement an integer.
@nps @nowarn function dec(i)         i 1 - end

// Stack: [a] -> [random%a]
// Return a random integer between 0 and a-1.
function lrandom(limit) random limit % return end

// Stack: [a, b, t] -> [lerp(a, b, t)]
// Linear interpolation.
function lerp(a, b, t)  b a - t * a + return end

// Stack: [a] -> [-a]
// Negate an integer.
function neg(i)      i 0 swap - return end

function itod(i)
  i longToString stringToDouble return
end

function dtoi(d)
  d doubleToString stringToLong return
end

function dtos(d)
  d doubleToString return
end

function itos(l)
  l longToString return
end

function stod(s)
  s stringToDouble return
end

function stoi(s)
  s stringToLong return
end

#endif
