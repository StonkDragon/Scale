#ifndef ARRAY_H
#define ARRAY_H

complex Array
  decl values
  decl count
end

function arrayGet(arr, index)
  index arr::Array.count more index 0 less or if
    "Invalid Array access" eputs
    1 exit
  fi

  arr::Array.values index 8 * + return
end

function arraySet(arr, index, value)
  index arr::Array.count more index 0 less or if
    "Invalid Array access" eputs
    1 exit
  fi
  
  decl tmp
  arr::Array.values index 8 * + store tmp
  value ref tmp
end

function arrayTop(arr)
  arr::Array.values arr::Array.count 1 - 8 * + return
end

function arrayPush(arr, value)
  decl tmp
  arr::Array.values arr::Array.count 8 * + store tmp
  value ref tmp
  arr::Array.count 1 + store arr::Array.count
end

function arrayPop(arr)
  arr::Array.count 1 - store arr::Array.count
end

function arrayCreate(maxSize)
  decl arr
  new Array store arr
  maxSize malloc
  store arr::Array.values
  0 store arr::Array.count
  arr return
end


#endif