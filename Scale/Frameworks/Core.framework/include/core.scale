using "io" from "Core"
using "util/array" from "Core"

extern function sleep(_millis_: int): none
extern function system(_cmd_: str): int
extern function getenv(_key_: str): str
extern function sizeof_stack(): int
extern function malloc(_size_: int): any
extern function realloc(_size_: int, _ptr_: any): any
extern function free(_ptr_: any): none
extern function strlen(_str_: str): int
extern function strsplit(_str_: str, _delim_: str): Array
extern function strcmp(_str1_: str, _str2_: str): int
extern function strncmp(_str1_: str, _str2_: str, _n_: int): int
extern function concat(_str1_: str, _str2_: str): str
extern function strrev(_str_: str): str
extern function time(): float
extern function longToString(_long_: int): str
extern function stringToLong(_str_: str): int
extern function stringToDouble(_str_: str): float
extern function doubleToString(_double_: float): str

function nop(): none
    0 sleep
end

function strstarts(_s1_: str, _s2_: str): int
    _s2_ strlen _s2_ _s1_ strncmp return
end

function sizeof(_type_: str): int
    _type_ "int" strcmp if
        8 return
    fi
    _type_ "float" strcmp if
        8 return
    fi
    _type_ "none" strcmp if
        0 return
    fi
    _type_ "str" strcmp if
        8 return
    fi
    _type_ "any" strcmp if
        8 return
    fi
    -1 return
end

function toChar(_val_: int): int
    _val_ 0xff & return
end

function toInt(_val_: int): int
    _val_ 0xffffffff & return
end

function toShort(_val_: int): int
    _val_ 0xffff & return
end

function toChars(_str_: str): none
    decl _len_: int _str_ strlen store _len_ decl _i_: int _len_ store _i_ while _i_ 0 >= do _str_ _i_ + @ toChar _i_ 1 - store _i_ done
end
