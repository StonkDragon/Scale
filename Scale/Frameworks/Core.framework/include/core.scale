#include "io.scale"

#ifndef _CORE_FRAMEWORK__CORE_SCALE_
#define _CORE_FRAMEWORK__CORE_SCALE_

#define HERE __FILE__ ":" concat __LINE__ "%d" sprintf ": " concat concat

extern exit
extern sleep
extern system
extern getenv
extern sizeof_stack
extern malloc
extern realloc
extern free
extern less
extern more
extern equal
extern and
extern not
extern or
extern strlen
extern strcmp
extern strncmp
extern concat
extern strrev
extern time
extern longToString
extern stringToLong
extern stringToDouble
extern doubleToString

@nps @nowarn function clearstack()
    while sizeof_stack 0 more do
        drop
    done
end

@nps @nowarn function swap2(_a_, _b_, _c_)
    _b_ _a_ _c_
end

@nps @nowarn function sdup2(_a_, _b_)
    _a_ _b_ _a_
end

@nps @nowarn function dup(_a_)
    _a_ _a_
end

@nps @nowarn function swap(_a_, _b_)
    _b_ _a_
end

@nps @nowarn function drop(_a_) [_a_] end

@nps @nowarn function over(_a_, _b_, _c_)
    _c_ _b_ _a_
end

function nop()
    0 sleep
end

function strstarts(_s1_, _s2_)
    _s2_ strlen _s2_ _s1_ strncmp return
end

function sizeof(_type_)
    _type_ "int" strcmp if
        4 return
    fi
    _type_ "long" strcmp if
        8 return
    fi
    _type_ "long long" strcmp if
        8 return
    fi
    _type_ "float" strcmp if
        4 return
    fi
    _type_ "double" strcmp if
        8 return
    fi
    _type_ "char" strcmp if
        1 return
    fi
    _type_ "size_t" strcmp if
        8 return
    fi
    _type_ "ssize_t" strcmp if
        8 return
    fi
    -1 return
end

function toChar(_val_)
    _val_ 255 & return
end

function toInt(_val_)
    _val_ 2147483647 & return
end

function toShort(_val_)
    _val_ 32767 & return
end

@nps @nowarn function toChars(_str_)
    decl _len_ _str_ strlen store _len_ decl _i_ _len_ store _i_ while _i_ 0 more _i_ 0 equal or do _str_ _i_ + deref toChar _i_ 1 - store _i_ done
end

#endif
