import std.util.Iterable

expect final sealed struct Range is Iterable
  decl lower: int
  decl upper: int
  
  expect function init(lower: int, upper: int): none
  expect function containsRange(other: Range): int
  expect function overlaps(other: Range): int
  expect function contains(x: int): int
  expect const function toString(): str
  expect function iterate(): RangeIterator
  expect function toReverseRange(): ReverseRange
  expect function toList(): [int]
end

expect final sealed struct ReverseRange is Iterable
  decl upper: int
  decl lower: int

  expect function init(upper: int, lower: int): none
  expect const function toString(): str
  expect function iterate(): ReverseRangeIterator
  expect function toRange(): Range
  expect function toList(): [int]
end

expect final sealed struct RangeIterator is Iterator
  private decl cur: int
  private decl last: int

  expect function init(r: Range): none
  expect function hasNext(): bool
  expect function next(): int
end

expect final sealed struct ReverseRangeIterator is Iterator
  private decl cur: int
  private decl last: int

  expect function init(r: ReverseRange): none
  expect function hasNext(): bool
  expect function next(): int
end

expect final sealed struct UnboundRange is Iterable
  expect function iterate(): UnboundRangeIterator
  expect const function toString(): str
end

expect final sealed struct UnboundRangeIterator is Iterator
  private decl i: int

  expect function init(): none
  expect function hasNext(): bool
  expect function next(): int
end

expect final sealed struct PartialRange is Iterable
  private decl hasUpperBound: bool
  private decl bound: int

  expect function init(): none

  expect static function lowerBound(bound: int): PartialRange
  expect static function upperBound(bound: int): PartialRange
  expect function iterate(): RangeIterator
  expect const function toString(): str
end
