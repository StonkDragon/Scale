container MathConstants
  const decl e: float
  const decl pi: float
end

function __init__math_scale(): none
  2.71828182845904523536028747135266250 => MathConstants.e
  3.14159265358979323846264338327950288 => MathConstants.pi

  c!
    srand(time(NULL));
  end
end

expect function sqrt(_f_: float): float
expect function sin(_f_: float): float
expect function cos(_f_: float): float
expect function tan(_f_: float): float
expect function asin(_f_: float): float
expect function acos(_f_: float): float
expect function atan(_f_: float): float
expect function atan2(_f1_: float, _f2_: float): float
expect function sinh(_f_: float): float
expect function cosh(_f_: float): float
expect function tanh(_f_: float): float
expect function asinh(_f_: float): float
expect function acosh(_f_: float): float
expect function atanh(_f_: float): float
expect function exp(_f_: float): float
expect function log(_f_: float): float
expect function log10(_f_: float): float

function random(): int
  decl r: int
  c!
    *r = ((scl_int) rand() << 32) | (scl_int) rand();
  end
  r return
end

function iseven(_i_: int): int
  _i_ 2 % 0 == return
end

function isodd(_i_: int): int
  _i_ iseven ! return
end

function lrandom(_limit_: int): int
  random _limit_ % return
end

function lerp(_a_: float, _b_: float, _t_: float): float
  _b_ _a_ - _t_ * _a_ + return
end

function neg(_i_: int): int
  _i_ 0 swap - return
end
