final sealed struct IllegalStateException: Exception
    function init(msg: str): none
        msg => self.msg
    end
end

sealed struct ReadOnlyArray: Array
    function sort(): none
        "Attempted to sort readonly array!"
        IllegalStateException::new throw
    end

    function set(index: int, value: any): none
        "Attempted to set value on readonly array!"
        IllegalStateException::new throw
    end

    function push(value: any): none
        "Attempted to push to readonly array!"
        IllegalStateException::new throw
    end

    function pop(): none
        "Attempted to pop on readonly array!"
        IllegalStateException::new throw
    end

    function reverse(): Array
        "Attempted to reverse readonly array!"
        IllegalStateException::new throw
        nil!! return
    end

    function remove(val: any): none
        "Attempted to remove value from readonly array!"
        IllegalStateException::new throw
    end

    function removeAll(val: any): none
        "Attempted to remove all values readonly array!"
        IllegalStateException::new throw
    end

    static function fromArray(arr: Array) out: ReadOnlyArray
        arr.capacity ReadOnlyArray::new
        c!
            for (scl_int i = 0; i < (*arr)->capacity; i++) {
                (*out)->values[i] = (*arr)->values[i];
            }
        end
        return
    end
end
