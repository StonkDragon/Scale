cdecl "write"
expect function __c_write(_fd_: int, _str_: [int8], _len_: int): none
cdecl "read"
expect function __c_read(_fd_: int, _buf_: [int8], _n_: int): none
cdecl "puts"
expect function __c_puts(_str_: [int8]): none

function write(_fd_: int, _str_: str): none
  _fd_ _str_:view _str_:size __c_write
end

function read(_fd_: int, _n_: int): str?
  _n_ malloc => decl buf: [int8]
  _fd_ buf _n_ __c_read
  buf str::new return
end

function puts(_str_: str): none
  _str_:view __c_puts
end

function eputs(_str_: str): none
  inline_c
    fprintf(stderr, "%s\n", (*_str_)->_data);
  end_inline
end

function putint(_int_: int): none
  inline_c
    printf(SCL_INT_FMT "\n", *_int_);
  end_inline
end

function putfloat(_f_: float): none
  inline_c
    printf("%f\n", *_f_);
  end_inline
end

function throwerr(_err_: str): none
  Exception::new => decl e: mut Exception
  _err_ => e.msg
  e throw
end
