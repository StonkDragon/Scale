final sealed struct Pair
	decl a: any
	decl b: any

	function init(a: any, b: any): none
		a => self.a
		b => self.b
	end

	function toString(): str
		( ( ("(" a:toString +) (", " b:toString +) +) ")" +) return
	end

	function ==(other: any): bool
		if other is Pair ! then false return fi
		other as Pair => decl otherPair

		if a otherPair.a == then
			if b otherPair.b == then
				true return
			fi
		fi
		false return
	end

	function !=(other: any): bool
		self other == ! return
	end

	function [](i: int): any
		if i 0 == then
			a return
		elif i 1 == then
			b return
		else
			"Pair index out of bounds: " i + InvalidArgumentException::new throw
		fi
	end
end
