@std.util.TypedArray
@@{frameworkPath}/include/std/util/TypedArray.scale
## Util: TypedArray
### final struct TypedArray<T>: Array
The struct `TypedArray` represents an array that can only contain values of type `T`.

### function TypedArray<T>:[](index: int): T
Returns the value at the index `index`.

### function TypedArray<T>:get(index: int): T
Returns the value at the index `index`.

### function TypedArray<T>:=>[](index: int, value: T): none
Sets the value at the index `index` to `value`.

### function TypedArray<T>:set(index: int, value: T): none
Sets the value at the index `index` to `value`.

### function TypedArray<T>:top(): T
Returns the value at the top of the array.
Throws an `IndexOutOfBoundsException` if the array is empty.

### function TypedArray<T>:push(value: T): none
Pushes the value `value` to the top of the array.

### function TypedArray<T>:pop(): T
Pops the value at the top of the array.

### function TypedArray<T>:indexOf(value: T): int
Returns the index of the first occurrence of `value` in the array.
Returns `-1` if `value` is not found.

### function TypedArray<T>:insert(value: T, index: int): none
Inserts `value` at index `index` in `self` and shifts all values after `index` to the right.

### function TypedArray<T>:contains(value: T): int
Returns `true` if `value` is found in the array.

### function TypedArray<T>:remove(value: T): none
Removes the first occurrence of `value` from the array.

### function TypedArray<T>:removeAll(value: T): none
Removes all occurrences of `value` from the array.

### function TypedArray<T>:iterate(): TypedArrayIterator<T>
Returns an iterator over the values of `self`.

### static function TypedArray<T>::new(size: int): TypedArray<T>
Returns a new instance of `TypedArray` with the size `size`.

### struct TypedArrayIterator<T> is Iterator
The struct `TypedArrayIterator` is an iterator over the values of a typed array.

### static function TypedArrayIterator<T>::new(arr: TypedArray<T>): TypedArrayIterator<T>
Returns a new instance of `TypedArrayIterator` that iterates over the values of `arr`.

### function TypedArrayIterator<T>:hasNext(): bool
Returns true if there are more values to iterate over.

### function TypedArrayIterator<T>:next(): T
Returns the next value in the array.
