@std.util.TypedArray
@@{frameworkPath}/include/std/util/TypedArray.scale
## Util: TypedArray
### final struct InvalidTypeException: Exception
The struct `InvalidTypeException` represents an exception that is thrown when an invalid type is encountered.

### static function InvalidTypeException::new(msg: str): InvalidTypeException
Returns a new instance of `InvalidTypeException` with the message `msg`.

### final struct TypedArray<T: SclObject>: Array
The struct `TypedArray` represents an array that can only contain values of a certain type.

### function TypedArray<T: SclObject>:[](index: int): T
Returns the value at the index `index`.

### function TypedArray<T: SclObject>:get(index: int): T
Returns the value at the index `index`.

### function TypedArray<T: SclObject>:=>[](index: int, value: T): none
Sets the value at the index `index` to `value`.

### function TypedArray<T: SclObject>:set(index: int, value: T): none
Sets the value at the index `index` to `value`.

### function TypedArray<T: SclObject>:top(): T
Returns the value at the top of the array.
Throws an `IndexOutOfBoundsException` if the array is empty.

### function TypedArray<T: SclObject>:push(value: T): none
Pushes the value `value` to the top of the array.

### function TypedArray<T: SclObject>:pop(): T
Pops the value at the top of the array.

### function TypedArray<T: SclObject>:indexOf(value: T): int
Returns the index of the first occurrence of `value` in the array.
Returns `-1` if `value` is not found.

### function TypedArray<T: SclObject>:insert(value: T, index: int): none
Inserts `value` at index `index` in `self` and shifts all values after `index` to the right.

### function TypedArray<T: SclObject>:contains(value: T): int
Returns `true` if `value` is found in the array.

### function TypedArray<T: SclObject>:remove(value: T): none
Removes the first occurrence of `value` from the array.

### function TypedArray<T: SclObject>:removeAll(value: T): none
Removes all occurrences of `value` from the array.

### static function TypedArray<T: SclObject>::new(size: int): TypedArray<T>
Returns a new instance of `TypedArray` with the size `size`.
