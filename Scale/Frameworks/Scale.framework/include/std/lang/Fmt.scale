# Formatted IO
final static sealed struct ConsoleColor  
  function reset(): str   "\033[0m"  return end
  function black(): str   "\033[30m" return end
  function red(): str     "\033[31m" return end
  function green(): str   "\033[32m" return end
  function yellow(): str  "\033[33m" return end
  function blue(): str    "\033[34m" return end
  function magenta(): str "\033[35m" return end
  function cyan(): str    "\033[36m" return end
  function white(): str   "\033[37m" return end
  function bold(): str    "\033[1m"  return end
end

final static sealed struct FmtIO
  cdecl "putchar" private expect foreign function putchar(char: int8): none

  private function printStrNoNewline(s: str): none
    foreach c in s do
      c FmtIO::putchar
    done
  end

  function puts(fmt: str, args: varargs): none
    args:iterate => decl argIterator: ArrayIterator
    for i in 0 to fmt:size do
      fmt[i] => decl c: int8
      if c '%' == then
        i++ => i
        fmt[i] => c
        if c '%' == then
          '%' FmtIO::putchar
        fi
        if argIterator:hasNext ! then
          "Not enough arguments for format string" InvalidArgumentException::new throw
        fi
        argIterator:next => decl arg: any
        if c 's' == c 'i' == || then
          arg builtinToString FmtIO::printStrNoNewline
        elif c 'f' == then
          arg float::fromBits float::toString FmtIO::printStrNoNewline
        elif c 'c' == then
          arg FmtIO::putchar
        else
          "Invalid format specifier at position #" i + InvalidArgumentException::new throw
        fi
      else
        c FmtIO::putchar
      fi
    done
    argIterator any::delete
  end
end
