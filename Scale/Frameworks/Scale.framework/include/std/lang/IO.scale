import std.fs

cdecl "write"
private expect foreign unsafe function __c_write(:int, :[int8], :int): int32
cdecl "read"
private expect foreign unsafe function __c_read(:int, :[int8], :int): int32
cdecl "fputs"
private expect foreign unsafe function __c_fputs(:[int8], :any): none
cdecl "_scl_get_stderr"
private expect foreign unsafe function __c_get_stderr(): any
cdecl "getchar"
private expect foreign unsafe function __c_getchar(): int8

cdecl "puts"
private expect foreign function puts0(:[int8]): none

function puts(value: [int8]): none
    value puts0
end

reified function puts<T>(value: T): none
    value:toString:view puts
end

function eputs(value: [int8]): none
    unsafe
        value __c_get_stderr __c_fputs c"\n" __c_get_stderr __c_fputs
    end
end

reified function eputs<T>(value: T): none
    value:toString:view eputs
end
