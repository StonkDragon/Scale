import std.io
import std.runtime.Process

typealias nothing "_scl_no_return scl_any"

cdecl "print_stacktrace"
deprecated![since: "23.7", replacement: "Process::stackTrace", forRemoval: true]
expect function trace(): none
cdecl "_scl_throw"
expect function throw(ex: Exception): nothing

cdecl "_scl_security_safe_exit"
private expect unsafe function __c_exit(i: int): none
cdecl "_scl_default_signal_handler"
private expect unsafe function __c_scl_default_signal_handler(sigNum: int): none
cdecl "raise"
private expect unsafe function __c_raise(sigNum: int): int
cdecl "_scl_errno"
expect function errno(): int
cdecl "_scl_errno_str"
expect function strerror(): str
cdecl "_scl_set_signal_handler"
expect function setSignalHandler(fun: lambda(int): none, sig: int): none
cdecl "_scl_reset_signal_handler"
expect function resetSignalHandler(sig: int): none

intrinsic function dumpStack(): none
  unsafe
    c!
      printf("Dump:\n");
      for (ssize_t i = _stack.ptr - 1; i >= 0; i--) {
        scl_int v = _stack.data[i].i;
        printf("   %zd: 0x" SCL_INT_HEX_FMT ", " SCL_INT_FMT "\n", i, v, v);
      }
      printf("\n");
    end
  end
end

function crash(): none
  unsafe
    1 __c_exit
  end
end

function raise(sigNum: int): none
  unsafe
    sigNum __c_raise => decl raised
    if raised ! then
      sigNum __c_scl_default_signal_handler
    fi
  end
end

cdecl "getchar"
private expect unsafe function __c_getchar(): int8

function breakPoint(): none
  "Hit breakPoint. Press enter to continue." puts
  unsafe
    __c_getchar
  end
end

sealed struct Exception
  decl msg: str
  decl stackTrace: const Array
  decl errnoStr: readonly str

  function init(): none
    if errno then
      strerror
    else
      ""
    fi => self.errnoStr
    Process::stackTrace => self.stackTrace
    "" => self.msg
  end

  restrict export sealed function printStackTrace(): none
    "Stacktrace of " typeof self + ":" + eputs
    for i in self.stackTrace.count 1 - to -1 step -- do
      "    " (i self.stackTrace:get as str) + eputs
    done
  end
end

final sealed struct InvalidSignalException: Exception
  decl sig: readonly int

  function init(sig: int): none
    sig => self.sig
  end
end

sealed open struct NullPointerException: Exception

sealed struct Error: Exception
  function init(msg: str): none
    msg => self.msg
  end
end

final sealed open struct AssertError: Error
final sealed open struct CastError: Error
final sealed open struct UnreachableError: Error

function sysPrettyString(): str
  40 any::new => decl sPtr: [int8]
  unsafe
    c!
      snprintf((*sPtr), 40, "%s %s", SCL_OS_NAME, SCL_SYSTEM);
    end
  end
  sPtr str::new return
end
