static final sealed struct GarbageCollector
    private decl gcLock: const SclObject

    construct function GarbageCollectorCInit(): none
        SclObject::new => gcLock
    end

    private expect unsafe function run0(): none
    private expect unsafe function setPaused0(:bool): none
    private expect unsafe function isPaused0(): bool
    private expect unsafe function getImplementation0(): [int8]

    expect function heapSize(): int
    expect function freeBytesEstimate(): int
    expect function bytesSinceLastCollect(): int
    expect function totalMemory(): int

    function collect(): none
        gcLock:lock
        unsafe
            run0
        end
        gcLock:unlock
    end

    function pause(): none
        gcLock:lock
        unsafe
            true setPaused0
        end
        gcLock:unlock
    end

    function resume(): none
        gcLock:lock
        unsafe
            false setPaused0
        end
        gcLock:unlock
    end

    function isPaused(): bool
        gcLock:lock
        unsafe
            isPaused0 
            gcLock:unlock
            return
        end
    end

    function implementation(): str
        gcLock:lock
        unsafe
            getImplementation0 str::new 
            gcLock:unlock
            return
        end
    end
end
