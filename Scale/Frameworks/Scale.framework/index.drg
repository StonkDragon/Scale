framework: {
    version: "23.7";
    headerDir: "include";
    implDir: "impl";
    implementers: [];
    implHeaderDir: "impl";
    implHeaders: [];
    docfile: "Docs.scldoc";
    docfile-format: "scldoc";
    modules: {
        std: [
            "std/lang/Core.scale";
            "std/lang/String.scale";
            "std/lang/SclObject.scale";
            "std/lang/Int.scale";
            "std/lang/Debug.scale";
            "std/lang/Any.scale";
            "std/lang/Float.scale";
        ];
        std.Int: [
            "std/lang/Int.scale";
        ];
        std.Any: [
            "std/lang/Any.scale";
        ];
        std.Float: [
            "std/lang/Float.scale";
        ];
        std.String: [
            "std/lang/String.scale";
        ];
        std.SclObject: [
            "std/lang/SclObject.scale";
        ];
        std.debug: [
            "std/lang/Debug.scale";
        ];
        std.math: [
            "std/lang/Math.scale";
        ];
        std.math.Fraction: [
            "std/math/Fraction.scale";
        ];
        std.io: [
            "std/lang/Fmt.scale";
            "std/lang/IO.scale";
        ];
        std.fs: [
            "std/lang/File.scale";
        ];
        std.util.Array: [
            "std/util/Array.scale";
        ];
        std.util.TypedArray: [
            "std/util/TypedArray.scale";
        ];
        std.util.ReadOnlyArray: [
            "std/util/ReadOnlyArray.scale";
        ];
        std.util.ImmutableArray: [
            "std/util/ImmutableArray.scale";
        ];
        std.util.InvalidArgumentException: [
            "std/util/InvalidArgumentException.scale";
        ];
        std.util.Pair: [
            "std/util/Pair.scale";
        ];
        std.util.IndexOutOfBoundsException: [
            "std/util/IndexOutOfBoundsException.scale";
        ];
        std.util.Cloneable: [
            "std/util/ICloneable.scale";
        ];
        std.util.Equatable: [
            "std/util/IEquatable.scale";
        ];
        std.util.Hashable: [
            "std/util/IHashable.scale";
        ];
        std.util.Iterable: [
            "std/util/IIterable.scale";
        ];
        std.util.Map: [
            "std/util/Map.scale";
        ];
        std.util.Range: [
            "std/util/Range.scale";
        ];
        std.util.ReverseRange: [
            "std/util/Range.scale";
        ];
        std.util.Stringifyable: [
            "std/util/IStringifyable.scale";
        ];
        std.util.Triple: [
            "std/util/Triple.scale";
        ];
        std.threading.Thread: [
            "std/thread/Thread.scale";
        ];
        std.threading.AtomicInteger: [
            "std/thread/atomics/Integer.scale";
        ];
        std.threading.AtomicObject: [
            "std/thread/atomics/Object.scale";
        ];
        std.reflect.Struct: [
            "std/reflect/Struct.scale";
        ];
    };
};
