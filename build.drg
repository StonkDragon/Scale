VERSION: "24.0";
SCL_ROOT_DIR: "/opt";

build: {
  incrementalBuild: "true";
  parallelBuild: "true";
  fullRebuildOnConfigChange: "true";
  compiler: "clang++";
  sourceDir: "Compiler";
  outputDir: "target";
  target: "sclc";
  includes: [
    "Compiler";
  ];
  units: [
    "Main.cpp";
    "modules/SyntaxTree.cpp";
    "modules/Parser.cpp";
    "modules/Tokenizer.cpp";
    "modules/Transpiler.cpp";
    "modules/DragonConfig.cpp";
    "modules/Function.cpp";
    "modules/Functions.cpp";
    "modules/Types.cpp";
    "modules/handlers/ReturnOnNil.cpp";
    "modules/handlers/Catch.cpp";
    "modules/handlers/Pragma.cpp";
    "modules/handlers/Using.cpp";
    "modules/handlers/Identifier.cpp";
    "modules/handlers/New.cpp";
    "modules/handlers/Repeat.cpp";
    "modules/handlers/For.cpp";
    "modules/handlers/Foreach.cpp";
    "modules/handlers/AddrRef.cpp";
    "modules/handlers/Store.cpp";
    "modules/handlers/Declare.cpp";
    "modules/handlers/CurlyOpen.cpp";
    "modules/handlers/BracketOpen.cpp";
    "modules/handlers/ParenOpen.cpp";
    "modules/handlers/StringLiteral.cpp";
    "modules/handlers/CharStringLiteral.cpp";
    "modules/handlers/CDecl.cpp";
    "modules/handlers/ExternC.cpp";
    "modules/handlers/IntegerLiteral.cpp";
    "modules/handlers/CharLiteral.cpp";
    "modules/handlers/FloatLiteral.cpp";
    "modules/handlers/FalsyType.cpp";
    "modules/handlers/TruthyType.cpp";
    "modules/handlers/Is.cpp";
    "modules/handlers/If.cpp";
    "modules/handlers/Unless.cpp";
    "modules/handlers/Else.cpp";
    "modules/handlers/Elif.cpp";
    "modules/handlers/Elunless.cpp";
    "modules/handlers/Fi.cpp";
    "modules/handlers/While.cpp";
    "modules/handlers/Do.cpp";
    "modules/handlers/DoneLike.cpp";
    "modules/handlers/Return.cpp";
    "modules/handlers/Goto.cpp";
    "modules/handlers/Label.cpp";
    "modules/handlers/Lambda.cpp";
    "modules/handlers/Case.cpp";
    "modules/handlers/Esac.cpp";
    "modules/handlers/Default.cpp";
    "modules/handlers/Switch.cpp";
    "modules/handlers/Break.cpp";
    "modules/handlers/Continue.cpp";
    "modules/handlers/As.cpp";
    "modules/handlers/Dot.cpp";
    "modules/handlers/ColumnOnInterface.cpp";
    "modules/handlers/Column.cpp";
    "modules/handlers/INVALID.cpp";
    "Common.cpp";
  ];
  watch: [
    ".*\.hpp";
  ];
  defines: [
    "VERSION=\"$(VERSION)\"";
    "C_VERSION=\"gnu17\"";
    "SCL_ROOT_DIR=\"$(SCL_ROOT_DIR)\"";
  ];
  std: "gnu++17";
  flags: [
    "-Wall";
    "-Wextra";
    "-Werror";
    "-Wno-gnu-statement-expression";
    "-O2";
  ];
  linkFlags: [
#ifdef LINUX
    "-Wl,--export-dynamic";
#endif
  ];
  preBuild: [
    "git ls-files | egrep '(\.scale|\.c(pp)?|\.h(pp)?)$' | xargs wc -l > loc.txt";
    "sudo rm -rf /opt/Scale/$(VERSION)/Frameworks";
    "sudo rm -rf /opt/Scale/$(VERSION)/Internal/libScaleRuntime*";
    "sudo mkdir -p /opt/Scale";
    "sudo cp -r Scale/* /opt/Scale/$(VERSION)";
    "sudo chmod -R 777 /opt/Scale";
  ];
  postBuild: [
    "sudo mv target/sclc /opt/Scale/$(VERSION)";
    "sudo rm -f /usr/local/bin/sclc";
    "sudo ln -s /opt/Scale/$(VERSION)/sclc /usr/local/bin/sclc";
    "sudo rm -f /usr/local/bin/scaledoc";
    "sudo ln -s /opt/Scale/$(VERSION)/sclc /usr/local/bin/scaledoc";
    "python3.12 tests.py run";
  ];
};

install: {
  incrementalBuild: "true";
  parallelBuild: "true";
  fullRebuildOnConfigChange: "true";
  compiler: "clang++";
  sourceDir: "Compiler";
  outputDir: "target";
  target: "sclc";
  includes: [
    "Compiler";
  ];
  units: [
    "Main.cpp";
    "modules/SyntaxTree.cpp";
    "modules/Parser.cpp";
    "modules/Tokenizer.cpp";
    "modules/Transpiler.cpp";
    "modules/DragonConfig.cpp";
    "modules/Function.cpp";
    "modules/Functions.cpp";
    "modules/Types.cpp";
    "modules/handlers/ReturnOnNil.cpp";
    "modules/handlers/Catch.cpp";
    "modules/handlers/Pragma.cpp";
    "modules/handlers/Using.cpp";
    "modules/handlers/Identifier.cpp";
    "modules/handlers/New.cpp";
    "modules/handlers/Repeat.cpp";
    "modules/handlers/For.cpp";
    "modules/handlers/Foreach.cpp";
    "modules/handlers/AddrRef.cpp";
    "modules/handlers/Store.cpp";
    "modules/handlers/Declare.cpp";
    "modules/handlers/CurlyOpen.cpp";
    "modules/handlers/BracketOpen.cpp";
    "modules/handlers/ParenOpen.cpp";
    "modules/handlers/StringLiteral.cpp";
    "modules/handlers/CharStringLiteral.cpp";
    "modules/handlers/CDecl.cpp";
    "modules/handlers/ExternC.cpp";
    "modules/handlers/IntegerLiteral.cpp";
    "modules/handlers/CharLiteral.cpp";
    "modules/handlers/FloatLiteral.cpp";
    "modules/handlers/FalsyType.cpp";
    "modules/handlers/TruthyType.cpp";
    "modules/handlers/Is.cpp";
    "modules/handlers/If.cpp";
    "modules/handlers/Unless.cpp";
    "modules/handlers/Else.cpp";
    "modules/handlers/Elif.cpp";
    "modules/handlers/Elunless.cpp";
    "modules/handlers/Fi.cpp";
    "modules/handlers/While.cpp";
    "modules/handlers/Do.cpp";
    "modules/handlers/DoneLike.cpp";
    "modules/handlers/Return.cpp";
    "modules/handlers/Goto.cpp";
    "modules/handlers/Label.cpp";
    "modules/handlers/Lambda.cpp";
    "modules/handlers/Case.cpp";
    "modules/handlers/Esac.cpp";
    "modules/handlers/Default.cpp";
    "modules/handlers/Switch.cpp";
    "modules/handlers/Break.cpp";
    "modules/handlers/Continue.cpp";
    "modules/handlers/As.cpp";
    "modules/handlers/Dot.cpp";
    "modules/handlers/ColumnOnInterface.cpp";
    "modules/handlers/Column.cpp";
    "modules/handlers/INVALID.cpp";
    "Common.cpp";
  ];
  defines: [
    "VERSION=\"$(VERSION)\"";
    "C_VERSION=\"gnu17\"";
    "SCL_ROOT_DIR=\"$(SCL_ROOT_DIR)\"";
  ];
  std: "gnu++17";
  flags: [
    "-Wall";
    "-Wextra";
    "-Werror";
    "-Wno-gnu-statement-expression";
    "-O2";
  ];
  linkFlags: [
#ifdef LINUX
    "-Wl,--export-dynamic";
#endif
  ];
  preBuild: [
    "sudo rm -rf /opt/Scale/$(VERSION)";
    "sudo mkdir -p /opt/Scale";
    "sudo chmod -R 777 /opt/Scale";
    "cp -r Scale /opt/Scale/$(VERSION)";
  ];
  preBuildWin: [
    "del /s /q C:\\Scale\\$(VERSION)";
    "mkdir C:\\Scale\\$(VERSION)";
    "xcopy /s /e /i /h /y Scale C:\\Scale\\$(VERSION)";
  ];
  postBuild: [
    "sudo mv target/sclc /opt/Scale/$(VERSION)";
    "sudo rm -f /usr/local/bin/sclc";
    "sudo ln -s /opt/Scale/$(VERSION)/sclc /usr/local/bin/sclc";
    "sudo rm -f /usr/local/bin/scaledoc";
    "sudo ln -s /opt/Scale/$(VERSION)/sclc /usr/local/bin/scaledoc";
    "rm -rf target";
    "clang++ -o nobuild-post nobuild-post.cpp -std=gnu++17";
    "sudo ./nobuild-post";
  ];
  postBuildWin: [
    "move target\\sclc.exe C:\\Scale\\$(VERSION)";
    "del /s /q C:\\Windows\\sclc.exe";
    "mklink C:\\Windows\\sclc.exe C:\\Scale\\$(VERSION)\\sclc.exe";
    "del /s /q C:\\Windows\\scaledoc.exe";
    "mklink C:\\Windows\\scaledoc.exe C:\\Scale\\$(VERSION)\\sclc.exe";
    "rmdir /s /q target";
    "clang++ -o nobuild-post nobuild-post.cpp -std=gnu++17";
    ".\\nobuild-post";
  ];
};
